// Code generated by goctl. DO NOT EDIT!
// Source: prediction.proto

package prediction

import (
	"context"

	"github.com/maniizu3110/attendance/rpc/prediction/proto/add"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddReq  = add.AddReq
	AddResp = add.AddResp

	Prediction interface {
		Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
	}

	defaultPrediction struct {
		cli zrpc.Client
	}
)

func NewPrediction(cli zrpc.Client) Prediction {
	return &defaultPrediction{
		cli: cli,
	}
}

func (m *defaultPrediction) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	client := add.NewPredictionClient(m.cli.Conn())
	return client.Add(ctx, in, opts...)
}
