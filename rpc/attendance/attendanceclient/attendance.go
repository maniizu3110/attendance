// Code generated by goctl. DO NOT EDIT!
// Source: attendance.proto

package attendanceclient

import (
	"context"


)

type (
	AddReq  = attendance.AddReq
	AddResp = attendance.AddResp

	Attendance interface {
		Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
	}

	defaultAttendance struct {
		cli zrpc.Client
	}
)

func NewAttendance(cli zrpc.Client) Attendance {
	return &defaultAttendance{
		cli: cli,
	}
}

func (m *defaultAttendance) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	client := attendance.NewAttendanceClient(m.cli.Conn())
	return client.Add(ctx, in, opts...)
}
